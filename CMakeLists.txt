cmake_minimum_required(VERSION 3.20)
set(CMAKE_CXX_STANDARD 17)
set(PLATFORM_NAME ${CMAKE_SYSTEM_NAME})
project(LibraryTemplate)
if (NOT PLATFORM_NAME)
    set(PLATFORM_NAME ${CMAKE_SYSTEM_NAME})
endif ()
string(TOLOWER ${PLATFORM_NAME} PLATFORM_NAME)
string(TOUPPER ${PLATFORM_NAME} PLATFORM_NAME_DEFINE)
if (${PLATFORM_NAME} STREQUAL "android")
    set(PLATFORM_ARCHITECTURE ${ANDROID_ABI})
    set(PLATFORM_NAME ${PLATFORM_NAME}${ANDROID_VERSION})
    add_definitions(-DANDROID_VERSION=${ANDROID_VERSION})
else ()
    set(PLATFORM_ARCHITECTURE ${CMAKE_SYSTEM_PROCESSOR})
endif ()
string(TOLOWER ${PLATFORM_ARCHITECTURE} PLATFORM_ARCHITECTURE)
add_definitions(-DPLATFORM_${PLATFORM_NAME_DEFINE} -DPLATFORM_ARCHITECTURE_${PLATFORM_ARCHITECTURE})
file(GLOB_RECURSE SOURCE_FILES src/*.cpp src/*.h src/*.c)
add_library(${PROJECT_NAME} STATIC ${SOURCE_FILES})

set_target_properties(${PROJECT_NAME} PROPERTIES PREFIX "")
set_target_properties(${PROJECT_NAME} PROPERTIES OUTPUT_NAME ${PROJECT_NAME})
set_target_properties(${PROJECT_NAME} PROPERTIES ARCHIVE_OUTPUT_DIRECTORY ${CMAKE_CURRENT_LIST_DIR}/build/${PLATFORM_NAME}/${PLATFORM_ARCHITECTURE})
set_target_properties(${PROJECT_NAME} PROPERTIES LIBRARY_OUTPUT_DIRECTORY ${CMAKE_CURRENT_LIST_DIR}/build/${PLATFORM_NAME}/${PLATFORM_ARCHITECTURE})
set_target_properties(${PROJECT_NAME} PROPERTIES RUNTIME_OUTPUT_DIRECTORY ${CMAKE_CURRENT_LIST_DIR}/build/${PLATFORM_NAME}/${PLATFORM_ARCHITECTURE})
target_include_directories(${PROJECT_NAME} PUBLIC include)

add_subdirectory(testing)
